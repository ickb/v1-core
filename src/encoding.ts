// This file is generated by @ckb-lumos/molecule, please do not modify it manually.
/* eslint-disable */
import { bytes, createFixedBytesCodec, molecule } from "@ckb-lumos/codec";
import {
  Uint8,
  Uint32,
  Uint64,
  Uint128,
  Int32,
  OutPoint,
} from "@ickb/lumos-utils";

const { union, struct } = molecule;

function createFallbackFixedBytesCodec(byteLength: number) {
  return createFixedBytesCodec({
    pack: bytes.bytify,
    unpack: bytes.hexify,
    byteLength,
  });
}

export const Byte32 = createFallbackFixedBytesCodec(32);

export const ReceiptDataV0 = struct(
  {
    depositQuantity: Uint32,
    depositAmount: Uint64,
  },
  ["depositQuantity", "depositAmount"],
);

export const ReceiptData = union(
  {
    ReceiptDataV0,
  },
  ["ReceiptDataV0"],
);

export const OwnedOwnerData = struct(
  {
    ownedDistance: Int32,
  },
  ["ownedDistance"],
);

export const Ratio = struct(
  {
    ckbMultiplier: Uint64,
    udtMultiplier: Uint64,
  },
  ["ckbMultiplier", "udtMultiplier"],
);

export const OrderInfo = struct(
  {
    ckbToUdt: Ratio,
    udtToCkb: Ratio,
    ckbMinMatchLog: Uint8,
  },
  ["ckbToUdt", "udtToCkb", "ckbMinMatchLog"],
);

export const MintOrderData = struct(
  {
    padding: Byte32,
    masterDistance: Int32,
    orderInfo: OrderInfo,
  },
  ["padding", "masterDistance", "orderInfo"],
);

export const MatchOrderData = struct(
  {
    masterOutpoint: OutPoint,
    orderInfo: OrderInfo,
  },
  ["masterOutpoint", "orderInfo"],
);

export const PartialOrderData = union(
  {
    MintOrderData,
    MatchOrderData,
  },
  ["MintOrderData", "MatchOrderData"],
);

export const UdtData = struct(
  {
    udtAmount: Uint128,
  },
  ["udtAmount"],
);
