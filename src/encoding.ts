// This file is generated by @ckb-lumos/molecule, please do not modify it manually.
/* eslint-disable */
import { bytes, createBytesCodec, createFixedBytesCodec, molecule } from "@ckb-lumos/codec";
import { Boolean, Uint8, Uint32, Uint64, Uint128, Int32, OutPoint } from './codec.js';

const { array, vector, union, option, struct, table } = molecule;

const fallbackBytesCodec = createBytesCodec({
  pack: bytes.bytify,
  unpack: bytes.hexify,
});

function createFallbackFixedBytesCodec(byteLength: number) {
  return createFixedBytesCodec({
    pack: bytes.bytify,
    unpack: bytes.hexify,
    byteLength,
  });
}

const byte = createFallbackFixedBytesCodec(1);

export const Byte32 = createFallbackFixedBytesCodec(32);

export const ReceiptDataV0 = struct({
  depositQuantity: Uint32,
  depositAmount: Uint64
}, ['depositQuantity', 'depositAmount']);

export const ReceiptData = union({
  ReceiptDataV0
}, ['ReceiptDataV0']);

export const OwnedOwnerData = struct({
  ownedDistance: Int32
}, ['ownedDistance']);

export const OrderInfo = struct({
  isUdtToCkb: Boolean,
  ckbMultiplier: Uint64,
  udtMultiplier: Uint64,
  logMinMatch: Uint8
}, ['isUdtToCkb', 'ckbMultiplier', 'udtMultiplier', 'logMinMatch']);

export const MintOrderData = struct({
  masterDistance: Int32,
  orderInfo: OrderInfo
}, ['masterDistance', 'orderInfo']);

export const MatchOrderData = struct({
  masterOutpoint: OutPoint,
  orderInfo: OrderInfo
}, ['masterOutpoint', 'orderInfo']);

export const FulfillOrderData = struct({
  masterOutpoint: OutPoint
}, ['masterOutpoint']);

export const PartialOrderData = union({
  MintOrderData,
  MatchOrderData,
  FulfillOrderData
}, ['MintOrderData', 'MatchOrderData', 'FulfillOrderData']);

export const UdtData = struct({
  udtAmount: Uint128
}, ['udtAmount']);
